// Copyright 2024, Horizen Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_xcm`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 46.2.0
//! DATE: 2025-06-05, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `dba956c4a7a5`, CPU: `AMD Ryzen 7 7700 8-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// /usr/local/bin/zkv-relay
// benchmark
// pallet
// --runtime
// /app/zkv_runtime.compact.compressed.wasm
// --genesis-builder=runtime
// --pallet
// pallet-xcm
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --heap-pages=4096
// --header
// /data/benchmark/HEADER-APACHE2
// --output
// /data/benchmark/runtime/src/weights/pallet_xcm.rs
// --template
// /data/benchmark/relay-node/benchmarks/zkv-deploy-weight-template.hbs
// --base-path=/tmp/tmp.LQE1fxMBsI

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;
use crate::parachains;

/// Weights for `pallet_xcm` using the zkVerify node and recommended hardware.
pub struct ZKVWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> pallet_xcm::WeightInfo for ZKVWeight<T> {
    /// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
    /// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn send() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `3507`
        // Minimum execution time: 26_670_000 picoseconds.
        Weight::from_parts(27_632_000, 3507)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
    /// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
    /// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
    /// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn teleport_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `145`
        //  Estimated: `6196`
        // Minimum execution time: 110_347_000 picoseconds.
        Weight::from_parts(112_100_000, 6196)
            .saturating_add(T::DbWeight::get().reads(7_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `Benchmark::Override` (r:0 w:0)
    /// Proof: `Benchmark::Override` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn reserve_transfer_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 18_446_744_073_709_551_000 picoseconds.
        Weight::from_parts(18_446_744_073_709_551_000, 0)
    }
    /// Storage: `Benchmark::Override` (r:0 w:0)
    /// Proof: `Benchmark::Override` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn transfer_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 18_446_744_073_709_551_000 picoseconds.
        Weight::from_parts(18_446_744_073_709_551_000, 0)
    }
    /// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
    /// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    fn execute() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `1485`
        // Minimum execution time: 7_323_000 picoseconds.
        Weight::from_parts(7_645_000, 1485)
            .saturating_add(T::DbWeight::get().reads(1_u64))
    }
    /// Storage: `XcmPallet::SupportedVersion` (r:0 w:1)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn force_xcm_version() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_901_000 picoseconds.
        Weight::from_parts(6_262_000, 0)
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    fn force_default_xcm_version() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_843_000 picoseconds.
        Weight::from_parts(1_924_000, 0)
    }
    /// Storage: `XcmPallet::VersionNotifiers` (r:1 w:1)
    /// Proof: `XcmPallet::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::QueryCounter` (r:1 w:1)
    /// Proof: `XcmPallet::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
    /// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::Queries` (r:0 w:1)
    /// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn force_subscribe_version_notify() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `3507`
        // Minimum execution time: 32_692_000 picoseconds.
        Weight::from_parts(33_193_000, 3507)
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
    }
    /// Storage: `XcmPallet::VersionNotifiers` (r:1 w:1)
    /// Proof: `XcmPallet::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
    /// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::Queries` (r:0 w:1)
    /// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn force_unsubscribe_version_notify() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `222`
        //  Estimated: `3687`
        // Minimum execution time: 34_154_000 picoseconds.
        Weight::from_parts(35_036_000, 3687)
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `XcmPallet::XcmExecutionSuspended` (r:0 w:1)
    /// Proof: `XcmPallet::XcmExecutionSuspended` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    fn force_suspension() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_764_000 picoseconds.
        Weight::from_parts(1_913_000, 0)
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: `XcmPallet::SupportedVersion` (r:6 w:2)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn migrate_supported_version() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `22`
        //  Estimated: `15862`
        // Minimum execution time: 23_324_000 picoseconds.
        Weight::from_parts(23_935_000, 15862)
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `XcmPallet::VersionNotifiers` (r:6 w:2)
    /// Proof: `XcmPallet::VersionNotifiers` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn migrate_version_notifiers() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `26`
        //  Estimated: `15866`
        // Minimum execution time: 23_404_000 picoseconds.
        Weight::from_parts(23_945_000, 15866)
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `XcmPallet::VersionNotifyTargets` (r:7 w:0)
    /// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn already_notified_target() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `40`
        //  Estimated: `18355`
        // Minimum execution time: 27_461_000 picoseconds.
        Weight::from_parts(27_943_000, 18355)
            .saturating_add(T::DbWeight::get().reads(7_u64))
    }
    /// Storage: `XcmPallet::VersionNotifyTargets` (r:2 w:1)
    /// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
    /// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn notify_current_targets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `78`
        //  Estimated: `6018`
        // Minimum execution time: 31_529_000 picoseconds.
        Weight::from_parts(32_391_000, 6018)
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    /// Storage: `XcmPallet::VersionNotifyTargets` (r:5 w:0)
    /// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn notify_target_migration_fail() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `40`
        //  Estimated: `13405`
        // Minimum execution time: 18_124_000 picoseconds.
        Weight::from_parts(18_695_000, 13405)
            .saturating_add(T::DbWeight::get().reads(5_u64))
    }
    /// Storage: `XcmPallet::VersionNotifyTargets` (r:6 w:2)
    /// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn migrate_version_notify_targets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `33`
        //  Estimated: `15873`
        // Minimum execution time: 23_635_000 picoseconds.
        Weight::from_parts(24_065_000, 15873)
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `XcmPallet::VersionNotifyTargets` (r:6 w:2)
    /// Proof: `XcmPallet::VersionNotifyTargets` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DeliveryFeeFactor` (r:1 w:0)
    /// Proof: `Dmp::DeliveryFeeFactor` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn migrate_and_notify_old_targets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `78`
        //  Estimated: `15918`
        // Minimum execution time: 45_255_000 picoseconds.
        Weight::from_parts(46_257_000, 15918)
            .saturating_add(T::DbWeight::get().reads(10_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `XcmPallet::QueryCounter` (r:1 w:1)
    /// Proof: `XcmPallet::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::Queries` (r:0 w:1)
    /// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn new_query() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `1485`
        // Minimum execution time: 2_214_000 picoseconds.
        Weight::from_parts(2_374_000, 1485)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: `XcmPallet::Queries` (r:1 w:1)
    /// Proof: `XcmPallet::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn take_response() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `7576`
        //  Estimated: `11041`
        // Minimum execution time: 29_665_000 picoseconds.
        Weight::from_parts(30_277_000, 11041)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: `XcmPallet::ShouldRecordXcm` (r:1 w:0)
    /// Proof: `XcmPallet::ShouldRecordXcm` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::AssetTraps` (r:1 w:1)
    /// Proof: `XcmPallet::AssetTraps` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn claim_assets() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `23`
        //  Estimated: `3488`
        // Minimum execution time: 35_567_000 picoseconds.
        Weight::from_parts(36_659_000, 3488)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
}
