// Copyright 2024, Horizen Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `parachains :: hrmp`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 46.2.0
//! DATE: 2025-06-05, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `dceb13ed1641`, CPU: `AMD Ryzen 7 7700 8-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// /usr/local/bin/zkv-relay
// benchmark
// pallet
// --runtime
// /app/zkv_runtime.compact.compressed.wasm
// --genesis-builder=runtime
// --pallet
// parachains :: hrmp
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --heap-pages=4096
// --header
// /data/benchmark/HEADER-APACHE2
// --output
// /data/benchmark/runtime/src/weights/parachains/hrmp.rs
// --template
// /data/benchmark/relay-node/benchmarks/zkv-deploy-weight-template.hbs
// --base-path=/tmp/tmp.LQE1fxMBsI

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;
use crate::parachains;

/// Weights for `parachains :: hrmp` using the zkVerify node and recommended hardware.
pub struct ZKVWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> parachains :: hrmp::WeightInfo for ZKVWeight<T> {
    /// Storage: `Paras::ParaLifecycles` (r:1 w:0)
    /// Proof: `Paras::ParaLifecycles` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannels` (r:1 w:0)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpEgressChannelsIndex` (r:1 w:0)
    /// Proof: `Hrmp::HrmpEgressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestCount` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn hrmp_init_open_channel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `384`
        //  Estimated: `3849`
        // Minimum execution time: 39_043_000 picoseconds.
        Weight::from_parts(39_785_000, 3849)
            .saturating_add(T::DbWeight::get().reads(9_u64))
            .saturating_add(T::DbWeight::get().writes(5_u64))
    }
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpIngressChannelsIndex` (r:1 w:0)
    /// Proof: `Hrmp::HrmpIngressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpAcceptedChannelRequestCount` (r:1 w:1)
    /// Proof: `Hrmp::HrmpAcceptedChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn hrmp_accept_open_channel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `374`
        //  Estimated: `3839`
        // Minimum execution time: 32_581_000 picoseconds.
        Weight::from_parts(33_533_000, 3839)
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `Hrmp::HrmpChannels` (r:1 w:0)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpCloseChannelRequests` (r:1 w:1)
    /// Proof: `Hrmp::HrmpCloseChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpCloseChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpCloseChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:1 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:1 w:1)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn hrmp_close_channel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `487`
        //  Estimated: `3952`
        // Minimum execution time: 34_375_000 picoseconds.
        Weight::from_parts(35_597_000, 3952)
            .saturating_add(T::DbWeight::get().reads(6_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: `Hrmp::HrmpIngressChannelsIndex` (r:128 w:128)
    /// Proof: `Hrmp::HrmpIngressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpEgressChannelsIndex` (r:128 w:128)
    /// Proof: `Hrmp::HrmpEgressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannels` (r:254 w:254)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpAcceptedChannelRequestCount` (r:0 w:1)
    /// Proof: `Hrmp::HrmpAcceptedChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannelContents` (r:0 w:254)
    /// Proof: `Hrmp::HrmpChannelContents` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestCount` (r:0 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// The range of component `i` is `[0, 127]`.
    /// The range of component `e` is `[0, 127]`.
    fn force_clean_hrmp(i: u32, e: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `231 + e * (100 ±0) + i * (100 ±0)`
        //  Estimated: `3693 + e * (2575 ±0) + i * (2575 ±0)`
        // Minimum execution time: 1_361_174_000 picoseconds.
        Weight::from_parts(1_363_068_000, 3693)
            // Standard Error: 121_947
            .saturating_add(Weight::from_parts(3_879_985, 0).saturating_mul(i.into()))
            // Standard Error: 121_947
            .saturating_add(Weight::from_parts(3_983_019, 0).saturating_mul(e.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(i.into())))
            .saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(e.into())))
            .saturating_add(T::DbWeight::get().writes(4_u64))
            .saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(i.into())))
            .saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(e.into())))
            .saturating_add(Weight::from_parts(0, 2575).saturating_mul(e.into()))
            .saturating_add(Weight::from_parts(0, 2575).saturating_mul(i.into()))
    }
    /// Storage: `Hrmp::HrmpOpenChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:128 w:128)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Paras::ParaLifecycles` (r:256 w:0)
    /// Proof: `Paras::ParaLifecycles` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpIngressChannelsIndex` (r:128 w:128)
    /// Proof: `Hrmp::HrmpIngressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpEgressChannelsIndex` (r:128 w:128)
    /// Proof: `Hrmp::HrmpEgressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestCount` (r:128 w:128)
    /// Proof: `Hrmp::HrmpOpenChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpAcceptedChannelRequestCount` (r:128 w:128)
    /// Proof: `Hrmp::HrmpAcceptedChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannels` (r:0 w:128)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// The range of component `c` is `[0, 128]`.
    fn force_process_hrmp_open(c: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `459 + c * (136 ±0)`
        //  Estimated: `1914 + c * (5086 ±0)`
        // Minimum execution time: 9_388_000 picoseconds.
        Weight::from_parts(9_578_000, 1914)
            // Standard Error: 10_093
            .saturating_add(Weight::from_parts(23_816_720, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(c.into())))
            .saturating_add(T::DbWeight::get().writes(1_u64))
            .saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(c.into())))
            .saturating_add(Weight::from_parts(0, 5086).saturating_mul(c.into()))
    }
    /// Storage: `Hrmp::HrmpCloseChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpCloseChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannels` (r:128 w:128)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpEgressChannelsIndex` (r:128 w:128)
    /// Proof: `Hrmp::HrmpEgressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpIngressChannelsIndex` (r:128 w:128)
    /// Proof: `Hrmp::HrmpIngressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpCloseChannelRequests` (r:0 w:128)
    /// Proof: `Hrmp::HrmpCloseChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannelContents` (r:0 w:128)
    /// Proof: `Hrmp::HrmpChannelContents` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// The range of component `c` is `[0, 128]`.
    fn force_process_hrmp_close(c: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `302 + c * (124 ±0)`
        //  Estimated: `1762 + c * (2600 ±0)`
        // Minimum execution time: 8_656_000 picoseconds.
        Weight::from_parts(983_548, 1762)
            // Standard Error: 11_668
            .saturating_add(Weight::from_parts(14_462_838, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(c.into())))
            .saturating_add(T::DbWeight::get().writes(1_u64))
            .saturating_add(T::DbWeight::get().writes((5_u64).saturating_mul(c.into())))
            .saturating_add(Weight::from_parts(0, 2600).saturating_mul(c.into()))
    }
    /// Storage: `Hrmp::HrmpOpenChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestCount` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// The range of component `c` is `[0, 128]`.
    fn hrmp_cancel_open_request(c: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `993 + c * (13 ±0)`
        //  Estimated: `4262 + c * (15 ±0)`
        // Minimum execution time: 16_992_000 picoseconds.
        Weight::from_parts(24_751_573, 4262)
            // Standard Error: 1_788
            .saturating_add(Weight::from_parts(78_054, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
            .saturating_add(Weight::from_parts(0, 15).saturating_mul(c.into()))
    }
    /// Storage: `Hrmp::HrmpOpenChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:128 w:128)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// The range of component `c` is `[0, 128]`.
    fn clean_open_channel_requests(c: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `210 + c * (63 ±0)`
        //  Estimated: `1689 + c * (2538 ±0)`
        // Minimum execution time: 7_535_000 picoseconds.
        Weight::from_parts(4_347_534, 1689)
            // Standard Error: 3_755
            .saturating_add(Weight::from_parts(3_934_514, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(c.into())))
            .saturating_add(T::DbWeight::get().writes(1_u64))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
            .saturating_add(Weight::from_parts(0, 2538).saturating_mul(c.into()))
    }
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestCount` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Paras::ParaLifecycles` (r:1 w:0)
    /// Proof: `Paras::ParaLifecycles` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannels` (r:1 w:0)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpEgressChannelsIndex` (r:1 w:0)
    /// Proof: `Hrmp::HrmpEgressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:2 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:2 w:2)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:2 w:2)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpIngressChannelsIndex` (r:1 w:0)
    /// Proof: `Hrmp::HrmpIngressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpAcceptedChannelRequestCount` (r:1 w:1)
    /// Proof: `Hrmp::HrmpAcceptedChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// The range of component `c` is `[0, 1]`.
    fn force_open_hrmp_channel(c: u32, ) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `384 + c * (235 ±0)`
        //  Estimated: `6324 + c * (235 ±0)`
        // Minimum execution time: 59_311_000 picoseconds.
        Weight::from_parts(61_281_834, 6324)
            // Standard Error: 129_941
            .saturating_add(Weight::from_parts(8_670_165, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(14_u64))
            .saturating_add(T::DbWeight::get().writes(8_u64))
            .saturating_add(Weight::from_parts(0, 235).saturating_mul(c.into()))
    }
    /// Storage: `Paras::ParaLifecycles` (r:1 w:0)
    /// Proof: `Paras::ParaLifecycles` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannels` (r:1 w:0)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpEgressChannelsIndex` (r:1 w:0)
    /// Proof: `Hrmp::HrmpEgressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestCount` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:2 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:2 w:2)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:2 w:2)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpIngressChannelsIndex` (r:1 w:0)
    /// Proof: `Hrmp::HrmpIngressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpAcceptedChannelRequestCount` (r:1 w:1)
    /// Proof: `Hrmp::HrmpAcceptedChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn establish_system_channel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `384`
        //  Estimated: `6324`
        // Minimum execution time: 59_552_000 picoseconds.
        Weight::from_parts(60_744_000, 6324)
            .saturating_add(T::DbWeight::get().reads(14_u64))
            .saturating_add(T::DbWeight::get().writes(8_u64))
    }
    /// Storage: `Hrmp::HrmpChannels` (r:1 w:1)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn poke_channel_deposits() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `230`
        //  Estimated: `3695`
        // Minimum execution time: 14_186_000 picoseconds.
        Weight::from_parts(14_678_000, 3695)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: `Paras::ParaLifecycles` (r:2 w:0)
    /// Proof: `Paras::ParaLifecycles` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequests` (r:2 w:2)
    /// Proof: `Hrmp::HrmpOpenChannelRequests` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpChannels` (r:2 w:0)
    /// Proof: `Hrmp::HrmpChannels` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpEgressChannelsIndex` (r:2 w:0)
    /// Proof: `Hrmp::HrmpEgressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestCount` (r:2 w:2)
    /// Proof: `Hrmp::HrmpOpenChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpOpenChannelRequestsList` (r:1 w:1)
    /// Proof: `Hrmp::HrmpOpenChannelRequestsList` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
    /// Storage: `XcmPallet::SupportedVersion` (r:2 w:0)
    /// Proof: `XcmPallet::SupportedVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueues` (r:2 w:2)
    /// Proof: `Dmp::DownwardMessageQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Dmp::DownwardMessageQueueHeads` (r:2 w:2)
    /// Proof: `Dmp::DownwardMessageQueueHeads` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpIngressChannelsIndex` (r:2 w:0)
    /// Proof: `Hrmp::HrmpIngressChannelsIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
    /// Storage: `Hrmp::HrmpAcceptedChannelRequestCount` (r:2 w:2)
    /// Proof: `Hrmp::HrmpAcceptedChannelRequestCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn establish_channel_with_system() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `384`
        //  Estimated: `6324`
        // Minimum execution time: 99_907_000 picoseconds.
        Weight::from_parts(101_239_000, 6324)
            .saturating_add(T::DbWeight::get().reads(21_u64))
            .saturating_add(T::DbWeight::get().writes(11_u64))
    }
}
