// Copyright 2024, Horizen Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_risc0_verifier_verify_proof`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.0
//! DATE: 2025-02-27, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `f4a2cbe83be5`, CPU: `AMD Ryzen 7 7700 8-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// /usr/local/bin/zkv-node
// benchmark
// pallet
// --runtime
// /app/zkv_runtime.compact.compressed.wasm
// --genesis-builder=runtime
// --pallet
// pallet-risc0-verifier-verify-proof
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --heap-pages=4096
// --header
// /data/benchmark/HEADER-APACHE2
// --output
// /data/benchmark/runtime/src/weights/pallet_risc0_verifier_verify_proof.rs
// --template
// /data/benchmark/node/zkv-deploy-weight-template.hbs
// --base-path=/tmp/tmp.d6M4oX3Xjs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

pub struct ZKVWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> pallet_plonky2_verifier::WeightInfoVerifyProof for ZKVWeight<T> {
    fn verify_proof_poseidon_uncompressed_2() -> Weight {
        Weight::from_parts(2_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_2() -> Weight {
        Weight::from_parts(52_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_3() -> Weight {
        Weight::from_parts(3_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_3() -> Weight {
        Weight::from_parts(53_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_4() -> Weight {
        Weight::from_parts(4_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_4() -> Weight {
        Weight::from_parts(54_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_5() -> Weight {
        Weight::from_parts(5_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_5() -> Weight {
        Weight::from_parts(55_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_6() -> Weight {
        Weight::from_parts(6_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_6() -> Weight {
        Weight::from_parts(56_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_7() -> Weight {
        Weight::from_parts(7_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_7() -> Weight {
        Weight::from_parts(57_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_8() -> Weight {
        Weight::from_parts(8_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_8() -> Weight {
        Weight::from_parts(58_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_9() -> Weight {
        Weight::from_parts(9_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_9() -> Weight {
        Weight::from_parts(59_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_10() -> Weight {
        Weight::from_parts(10_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_10() -> Weight {
        Weight::from_parts(510_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_11() -> Weight {
        Weight::from_parts(11_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_11() -> Weight {
        Weight::from_parts(511_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_12() -> Weight {
        Weight::from_parts(12_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_12() -> Weight {
        Weight::from_parts(512_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_13() -> Weight {
        Weight::from_parts(13_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_13() -> Weight {
        Weight::from_parts(513_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_14() -> Weight {
        Weight::from_parts(14_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_14() -> Weight {
        Weight::from_parts(514_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_15() -> Weight {
        Weight::from_parts(15_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_15() -> Weight {
        Weight::from_parts(515_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_16() -> Weight {
        Weight::from_parts(16_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_16() -> Weight {
        Weight::from_parts(516_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_17() -> Weight {
        Weight::from_parts(17_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_17() -> Weight {
        Weight::from_parts(517_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_18() -> Weight {
        Weight::from_parts(18_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_18() -> Weight {
        Weight::from_parts(518_827_807_000, 0)
    }

    fn verify_proof_poseidon_uncompressed_19() -> Weight {
        Weight::from_parts(19_827_807_000, 0)
    }

    fn verify_proof_keccak_uncompressed_19() -> Weight {
        Weight::from_parts(519_827_807_000, 0)
    }
}
