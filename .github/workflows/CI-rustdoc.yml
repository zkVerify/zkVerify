name: Rustdoc

run-name: "Workflow CI/CD Steps: rust doc generation and deployment"

on:
  workflow_call:
    inputs:
      deploy:
        description: 'Whether to deploy rustdoc to Github'
        required: false
        type: string
        default: 'yes'
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Whether to deploy rustdoc to Github'
        required: false
        type: choice
        options:
          - 'yes'
          - 'no'
        default: 'no'

jobs:
  rustdoc-generation:
    runs-on: warp-ubuntu-latest-x64-8x
    name: Rustdoc generation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Rust documentation
        uses: ./.github/actions/cmd-in-docker
        with:
          command: >-
            /bin/bash -c 'cargo doc --no-deps --release
            && echo "<meta http-equiv=\"refresh\" content=\"0; url=zkv_node/index.html\">" > /build/target/doc/index.html'
          use_cache: 'yes'
          cache_key: 'rustdoc'
          cmake_install: 'yes'
          lld_install: 'yes'

      - name: Upload documentation
        if: ${{ inputs.deploy == 'yes' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/doc

  rustdoc-deployment:
    runs-on: warp-ubuntu-latest-x64-2x
    if: ${{ inputs.deploy == 'yes' }}
    name: Rustdoc deployment
    needs: rustdoc-generation
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
