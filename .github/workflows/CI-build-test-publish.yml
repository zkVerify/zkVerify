name: Build, Test and Publish Docker Image

on:
  workflow_call:
    inputs:
      chain:
        description: "Solo or relay"
        required: true
        type: string
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_TOKEN:
        required: true
      GH_TOKEN:
        required: true
      QA_SLACK_WEBHOOK_URL:
        required: true
      RELEASES_PROD_SLACK_WEBHOOK_URL:
        required: true

env:
  DOCKER_HUB_ORG: horizenlabs
  DOCKER_IMAGE_BUILD_NAME: ${{ vars.DOCKER_IMAGE_BUILD_NAME }}

jobs:
  build:
    runs-on:
      group: ${{ vars.RUNNER_GROUP }}
    name: Build Docker image
    steps:
      - uses: actions/checkout@v4
      - id: create-docker-images
        uses: ./.github/actions/build-docker-image
        with:
          chain: ${{ inputs.chain }}
          ref: ${{ github.ref }}
          docker-hub-org: ${{ env.DOCKER_HUB_ORG }}
          docker_image_name: ${{ env.DOCKER_IMAGE_BUILD_NAME }}
    outputs:
      artifact_name: ${{ steps.create-docker-images.outputs.artifact_name }}

  publish-docker-image:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    # needs: [ build, execute-e2e-tests ] # Wait for e2e tests to finish
    # if: always()
    needs: [ build ]

    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Download zkVerify Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          path: ./

      - name: Publish Docker image
        env:
          RELEASE_BRANCH: release
          MAINTAINERS_KEYS: ${{ vars.MAINTAINERS_KEYS }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: |
          source "${GITHUB_WORKSPACE}/ci/setup_env.sh"
          "${GITHUB_WORKSPACE}/ci/docker.sh" --image-artifact ${{ needs.build.outputs.artifact_name }}
        shell: bash

      - name: Upload runtime artifact
        uses: actions/upload-artifact@v4
        with:
          name: "zkv_runtime.${{ inputs.chain }}.compact.compressed.wasm"
          path: ./zkv_runtime.compact.compressed.wasm

      - name: Notify Slack Production Releases
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸŽ‰ ${{ env.DOCKER_IMAGE_BUILD_NAME }} Docker Image v${{ github.ref_name }}-${{ inputs.chain }} Released! ðŸŽ‰"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Docker Image:*  <https://hub.docker.com/r/${{ env.DOCKER_HUB_ORG }}/${{ env.DOCKER_IMAGE_BUILD_NAME }}/tags?page=1&name=${{ github.ref_name }}-${{ inputs.chain }}| v${{ github.ref_name }}-${{ inputs.chain }}>\n"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Build URL:*  <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Build>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "```docker pull ${{ env.DOCKER_HUB_ORG }}/${{ env.DOCKER_IMAGE_BUILD_NAME }}:${{ github.ref_name }}-${{ inputs.chain }}```"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.RELEASES_PROD_SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
